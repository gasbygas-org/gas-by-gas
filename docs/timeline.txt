WEEK 1		Planning and Foundation Setup										
GOAL		Lay the groundwork for development by setting up environments, tools, and initial modules										
Backend	
    Set up backend architecture	
    Configure database schema and tables	
        Registration with NIC validation: Ensure backend schema supports unique NIC storage.
    Create authentication endpoints (/register, /login, /logout)	
        Implement user validation during registration to prevent multiple registrations per identity.
    Implement basic stock management endpoints	
Frontend	
    Create initial UI mockups for the web app (consumer and outlet panels)	
    Implement static pages (home, login, dashboard)	
Mobile	
    Set up mobile app environment	
    Build navigation between main pages (login, dashboard, request page)	
    Integrate authentication API with mobile	
Test & Documentation	
    Set up GitHub repo, CI/CD pipeline	
    Define test strategy	
    Draft initial project documentation structure	


WEEK 2		Core Feature Development										
GOAL		Implement the core features of the system										
Backend	
    Develop gas request management endpoints (/create-request, /update-request, /get-requests)	
        Implement logic to inform users about scheduled deliveries within two weeks or notify them about the absence of scheduled deliveries.
	Implement token generation and validation	
        Ensure token generation is secure and serves as a reference for both consumers and outlet managers.
	Develop endpoints for generating basic reports	
Frontend	
    Implement request creation and management workflows for consumers	
	Create outlet manager pages (view/manage requests)	
        Enable outlet managers to view token numbers and verify order validity.
	Connect APIs to the web frontend	
	Design basic report viewing interface for outlet managers	
Mobile	
    Develop gas request creation UI for mobile	
	Add push notification functionality	
        Scheduled delivery notification: Develop SMS/email notification services.
	Integrate core request management API	
Test & Documentation	
    Write test cases for implemented features	
	Test backend and frontend functionality	
	Document backend API endpoints	
	Begin drafting documentation for report generation features	


WEEK 3		Advanced Features & Finalization										
GOAL		Implement advanced features, testing, and final integrations										
Backend	
    Implement delivery scheduling and notification endpoints (/schedule-delivery, /send-notification)	
        Develop automated SMS/email notification system to update customers about order details and pickup dates.
		Develop a system to recommend optimal reorder quantities based on historical data and demand forecasts.
	Add role-based access controls	
        Implement a role-based access control system to grant different levels of access to consumers, outlet managers, and head office staff.
	Finalize database schema	
	Implement Head Office dashboard API endpoints	
        Develop dashboards to visualize outlet stock levels, pending requests, and delivery routes.
	Integrate request management with stock levels	
	Develop endpoints for advanced reporting features	
        Create daily reports that provide an overview of total requests, completed orders, stock levels, popular cylinder types, and potential delivery delays.
	Implement audit logging	
        Implement transaction logging to create an audit trail for security and accountability.
Frontend	
    Add delivery schedule visualization	
	Finalize outlet and head office dashboards	
	Conduct UI/UX testing	
	Develop Head Office dashboard UI	
Mobile	
    Finalize push notifications and delivery updates	
	Perform end-to-end testing with backend	
	Design and implement UI for viewing delivery schedules	
Test & Documentation	
    Perform integration testing (backend + web + mobile)	
	Log and address all major bugs	
	Update final documentation sections (ERD, class diagrams, sequence diagrams, etc.)	
	Finalize documentation for all added features	
	Conduct security testing, including validation and fraud detection	
        Implement robust authentication measures, including multi-factor authentication.


Week 4		Report Writing										
Report Drafting	
    Write sections: introduction, system design, implementation, testing, results	
	Include diagrams and relevant data	
        System architecture design with the communication Diagram
        Use case diagram
        EER diagram
        Class diagram
        Sequence diagram
        Activity diagram
        Pseudocodes
        Flow charts
        Software-testing design
Team Review	
    Review and finalize the report	
	Prepare presentation slides	
Submission	
    Submit the final report and presentation	
